name: TDD Test Suite

on:
  push:
    branches: [ main, develop, '*.x' ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * *'  # Daily at midnight

permissions:
  contents: read

jobs:
  tests:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: havasu_lake_burritos_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

      redis:
        image: redis:alpine
        ports:
          - 6379:6379

    strategy:
      fail-fast: false
      matrix:
        php: [8.2, 8.3]
        laravel: [12.x]
        include:
          - php: 8.2
            laravel: 12.x
          - php: 8.3
            laravel: 12.x

    name: PHP ${{ matrix.php }} - Laravel ${{ matrix.laravel }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, redis
          coverage: xdebug

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Composer dependencies
        run: composer install --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist --optimize-autoloader

      - name: Install NPM dependencies
        run: npm ci

      - name: Build frontend assets
        run: npm run build

      - name: Copy environment file
        run: cp .env.example .env

      - name: Generate application key
        run: php artisan key:generate

      - name: Create SQLite database
        run: touch database/database.sqlite

      - name: Configure application for testing
        run: |
          echo "APP_ENV=testing" >> .env
          echo "APP_NAME=Havasu Lake Burritos" >> .env
          echo "DB_CONNECTION=sqlite" >> .env
          echo "DB_DATABASE=:memory:" >> .env
          echo "CACHE_DRIVER=array" >> .env
          echo "SESSION_DRIVER=array" >> .env
          echo "QUEUE_DRIVER=sync" >> .env
          echo "WEEKEND_PRODUCTION_ENABLED=true" >> .env
          echo "MAX_DAILY_BURRITOS=100" >> .env
          echo "APP_TIMEZONE=America/Phoenix" >> .env

      - name: Clear config cache
        run: php artisan config:clear

      - name: Run migrations
        run: php artisan migrate --force

      - name: Run Laravel Pint (code style)
        run: ./vendor/bin/pint --test

      - name: Run PHPStan (static analysis)
        run: ./vendor/bin/phpstan analyse --error-format=github

      - name: Run PHPUnit tests with coverage
        run: php artisan test --coverage --min=80

      - name: Run unit tests
        run: php artisan test --testsuite=Unit

      - name: Run feature tests
        run: php artisan test --testsuite=Feature

      - name: Run integration tests
        run: php artisan test --testsuite=Integration

      - name: Run performance tests
        run: php artisan test --testsuite=Performance

      - name: Upload coverage reports
        if: matrix.php == '8.3' && matrix.laravel == '12.x'
        uses: codecov/codecov-action@v3
        with:
          files: ./build/logs/clover.xml
          flags: unittests
          name: codecov-umbrella

  mobile-tests:
    runs-on: ubuntu-latest
    needs: tests
    if: github.event_name == 'push' || github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv

      - name: Install Composer dependencies
        run: composer install --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Setup Chrome for Dusk
        run: |
          sudo apt-get update
          sudo apt-get install -y chromium-browser
          google-chrome --version

      - name: Copy environment file
        run: cp .env.example .env

      - name: Generate application key
        run: php artisan key:generate

      - name: Create SQLite database
        run: touch database/database.sqlite

      - name: Configure for browser testing
        run: |
          echo "APP_URL=http://localhost:8000" >> .env
          echo "DUSK_DRIVER_URL=http://localhost:9515" >> .env
          echo "WEEKEND_PRODUCTION_ENABLED=true" >> .env

      - name: Start Chrome driver
        run: ./vendor/laravel/dusk/bin/chromedriver-linux &

      - name: Start Laravel server
        run: php artisan serve &

      - name: Wait for server
        run: sleep 5

      - name: Run Dusk browser tests
        run: php artisan dusk

      - name: Upload Dusk screenshots
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: dusk-screenshots
          path: tests/Browser/screenshots

  security-audit:
    runs-on: ubuntu-latest
    needs: tests
    if: github.event_name == 'push' || github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3

      - name: Install dependencies
        run: composer install --no-dev --optimize-autoloader

      - name: Run security audit
        run: composer audit

      - name: Check for known vulnerabilities
        run: |
          if [ -f composer.lock ]; then
            curl -H "Accept: text/plain" https://security.symfony.com/check_lock -F lock=@composer.lock
          fi
